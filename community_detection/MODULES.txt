{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 def find_cno(node):\
    C=-1\
    for i in range(len(communities)):\
        for j in communities[i]:\
            if j==node:\
                C=(i+1)\
                return C\
\
def find_same_community_nodes(cno,l):\
    X=0\
    for i in range(len(l)):\
        if find_cno(l[i])==cno:\
            X=X+1\
    return X\
\
def find_internal_degree(node,cno):\
    l=[n for n in G.neighbors(node)]\
    print("The list of neighbors is: ",l)\
    COUNT = find_same_community_nodes(cno,l)\
    return COUNT\
\
def find_external_degree(node,int_degree):\
    degree = G.degree(node)\
    return degree-int_degree}